install.packages(c("car", "agricolae", "ggplot2"))
install.packages("rmarkdown")
install.packages("flexdashboard")
install.packages("rsconnect")
r1<-rnorm(10, mean = 2,sd=3)
qqplot(r1)
qqplot(residuals(r1))
cite('agricolae')
library("agricolae", lib.loc="~/R/win-library/3.3")
cite('agricolae')
citation('agricolae')
install.packages("zoo")
install.packages(c("digest", "ggplot2", "jsonlite", "rmarkdown", "rsconnect", "shiny", "sp", "spdep", "tidyr"))
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
install.packages(c("DBI", "flexdashboard", "ggpubr", "ggsci", "jsonlite", "mvtnorm", "pbkrtest", "RcppEigen", "SparseM"))
library("dplyr", lib.loc="~/R/win-library/3.3")
data(flights)
require(RcmdrPlugin.DoE)
install.packages("Rcmdr")
library("Rcmdr", lib.loc="~/R/win-library/3.3")
require(RcmdrPlugin.DoE)
install.packages(c("RcmdrPlugin.DoE", "RcmdrPlugin.doex"))
library("Rcmdr", lib.loc="~/R/win-library/3.3")
Commander()
require(RcmdrPlugin.DoE)
Commander()
Commander()
cand.list = expand.grid(Factor1 = c("A", "B", "C", "D"),
Factor2 = c("I", "II", "III"),
Factor3 = c("Low", "High"),
Factor4 = c("Yes", "No"))
View(cand.list)
library(rsm)
### Simple 3-factor case, not randomized so structure is evident
bbd(3, randomize=FALSE)
### 5-factor BBD, divided between two plants
bbd(y1 + y2 ~ A + B + C + D + E,  n0 = 5,  block = "Plant")
bbd(3, randomize=T)
bbd(y1 ~ A + B ,  n0 = 5)
bbd(y1 ~ A + B+c ,  n0 = 5)
citation(package = 'agricolae')
require(ggplot2)
require(ggmap)
require(maps)
require(mapproj)
require(mapdata)
require(rgeos)
require(maptools)
require(sp)
require(raster)
require(rgdal)
require(dismo)
#install.packages("ggmap")
#install.packages("maps")
#install.packages("mapproj")
#install.packages("mapdata")
#install.packages("rgeos")
#install.packages("maptools")
#install.packages("sp")
#install.packages("raster")
#install.packages("rgdal")
#install.packages("dismo")
install.packages("maps")
install.packages("mapproj")
install.packages("mapdata")
install.packages("rgeos")
install.packages("maptools")
install.packages("sp")
install.packages("raster")
install.packages("rgdal")
install.packages("dismo")
install.packages("sp")
install.packages("ggmap")
require(ggplot2)
require(ggmap)
require(maps)
require(mapproj)
require(mapdata)
require(rgeos)
require(maptools)
require(sp)
require(raster)
require(rgdal)
require(dismo)
locs = read.csv("http://datadryad.org/bitstream/handle/10255/dryad.46089/Yoder_etal_sites.txt", h=T, sep="")
locs
range(locs$lat_dec)
range(locs$lon_dec)
base = get_map(location=c(-120,33,-112.5,38.5), zoom=7, maptype="terrain-background")
base = get_map(location=c(-120,33,-112.5,38.5), zoom=7)
map1 = ggmap(base)
map1
?get_map
base = get_map(location=c(-120,33,-112.5,38.5), zoom=7, maptype="terrain")
map1 = ggmap(base)
map1
map1+ geom_point(data=locs, aes(x=-lon_dec, y=lat_dec, fill=Type, shape=Type), color="white", cex=2.5) + # plot the points
scale_fill_manual(values = c("darkorange2", "#59A044", "#333FA0"), labels=c("Contact zone", "Yucca jaegeriana", "Y. brevifolia"), name=NULL) +
scale_shape_manual(values = c(23,24,21), labels=c("Contact zone", "Yucca jaegeriana", "Y. brevifolia"), name=NULL) + # define shape/color scales
labs(x="Latitude", y="Longitude", title="Collection sites") + # label the axes
theme_bw() + theme(legend.position="bottom", axis.text = element_text(size = rel(0.75)), legend.key = element_rect(colour = "white"), axis.text.x = element_text(angle=45, vjust=0.5)) # tweak the plot's appearance and legend position
base = get_map(location=c(-120,33,-112.5,38.5), zoom=7, maptype="satellite")
map1 = ggmap(base)
map1+ geom_point(data=locs, aes(x=-lon_dec, y=lat_dec, fill=Type, shape=Type), color="white", cex=2.5) + # plot the points
scale_fill_manual(values = c("darkorange2", "#59A044", "#333FA0"), labels=c("Contact zone", "Yucca jaegeriana", "Y. brevifolia"), name=NULL) +
scale_shape_manual(values = c(23,24,21), labels=c("Contact zone", "Yucca jaegeriana", "Y. brevifolia"), name=NULL) + # define shape/color scales
labs(x="Latitude", y="Longitude", title="Collection sites") + # label the axes
theme_bw() + theme(legend.position="bottom", axis.text = element_text(size = rel(0.75)), legend.key = element_rect(colour = "white"), axis.text.x = element_text(angle=45, vjust=0.5)) # tweak the plot's appearance and legend position
install.packages(c("bindrcpp", "dplyr", "evaluate", "ggpubr", "ggsci", "ggsignif", "glue", "R6", "rmarkdown"))
install.packages("MASS")
library("MASS", lib.loc="~/R/win-library/3.4")
knitr::opts_chunk$set(echo = FALSE)
plot(pressure)
library("rmarkdown", lib.loc="~/R/win-library/3.4")
remove.packages("rmarkdown", lib="~/R/win-library/3.4")
install.packages("rmarkdown")
library("rmarkdown", lib.loc="~/R/win-library/3.4")
devtools::install_github("yihui/xaringan")
install.packages("devtools")
library("devtools", lib.loc="~/R/win-library/3.4")
devtools::install_github("yihui/xaringan")
library("slidify", lib.loc="~/R/win-library/3.4")
library("slidifyLibraries", lib.loc="~/R/win-library/3.4")
knitr::include_graphics('./figure/HG.jpg')
knitr::include_graphics('./figure/flujoMed.jpg')
# Chunk 1
knitr::include_graphics('./figure/Data.jpg')
# Chunk 2
knitr::include_graphics('./figure/Escala.png')
# Chunk 3
knitr::include_graphics('./figure/data2.jpg')
# Chunk 4
knitr::include_graphics('./figure/flujo.jpg')
# Chunk 5
knitr::include_graphics('./figure/Var.jpg')
# Chunk 6
knitr::include_graphics('./figure/1.png')
# Chunk 7
knitr::include_graphics('./figure/2.png')
# Chunk 8
knitr::include_graphics('./figure/3.png')
# Chunk 9
knitr::include_graphics('./figure/4.png')
# Chunk 10
knitr::include_graphics('./figure/5.png')
# Chunk 11
knitr::include_graphics('./figure/6.png')
knitr::include_graphics('./figure/flujoMed.jpg')
library(ggpubr)
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
# Basic plot with label outsite
# +++++++++++++++++++++++++++
ggbarplot(df, x = "dose", y = "len",
label = F, label.pos = "out")
library(ggpubr)
df <- data.frame(
group = c("Male", "Female", "Child"),
value = c(25, 25, 50))
labs <- paste0(df$group, " (", df$value, "%)")
ggpie(df, "value", label = labs,
fill = "group", color = "white",
palette = c("#00AFBB", "#E7B800", "#FC4E07"))
library(readr)
datosS1 <- read_delim("C:/Users/W/Desktop/S1/datosS1.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(datosS1)
table(datosS1$status)
rmarkdown::shiny_prerendered_clean('C:/Users/W/Google Drive/DOE - MIA/2017-2/Scripts y asignaciones/Asg1.Rmd')
library("knitr", lib.loc="~/R/win-library/3.4")
library("knitr", lib.loc="~/R/win-library/3.4")
install.packages(c("agricolae", "car", "cowplot", "curl", "devtools", "dplyr", "ggsignif", "git2r", "knitrBootstrap", "purrr", "Rcpp", "rgdal", "rlang", "sp", "visNetwork", "withr", "xaringan"))
library("rmarkdown", lib.loc="~/R/win-library/3.4")
install.packages("Rcpp")
library("rmarkdown", lib.loc="~/R/win-library/3.4")
unlink('C:/Users/W/Google Drive/DOE - MIA/2017-2/Scripts y asignaciones/Asg1_cache', recursive = TRUE)
library("knitr", lib.loc="~/R/win-library/3.4")
install.packages("pandoc")
install.packages(c("agricolae", "bindrcpp", "car", "checkmate", "cowplot", "curl", "DBI", "dplyr", "evaluate", "Formula", "ggpubr", "ggsci", "ggsignif", "glue", "htmlwidgets", "httpuv", "igraph", "knitr", "knitrBootstrap", "mirt", "purrr", "R6", "Rcpp", "rlang", "rmarkdown", "sandwich", "sfsmisc", "sp", "textshape", "XML"))
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
install.packages("blogdown")
install.packages("blogdown")
if (!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("rstudio/blogdown")
if (!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("rstudio/blogdown")
blogdown::install_hugo()
blogdown::new_site(theme = "gcushen/hugo-academic", theme_example = TRUE)
if (!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("rstudio/blogdown")
library("blogdown", lib.loc="~/R/win-library/3.3")
blogdown::install_hugo()
blogdown::install_theme('jrutheiser/hugo-lithium-theme')
library("devtools", lib.loc="~/R/win-library/3.3")
install_github("slidifyLibraries", "ramnathv")
library("slidify", lib.loc="~/R/win-library/3.3")
install_github("slidifyLibraries", "ramnathv")
library("devtools", lib.loc="~/R/win-library/3.3")
library("rmarkdown", lib.loc="~/R/win-library/3.3")
ggboxplot(wdata, x='Cepa',y='Deg', xlab='Cepa bacteriana',ylab='Concentración (ppm)')
library(ggpubr)
ggboxplot(wdata, x='Cepa',y='Deg', xlab='Cepa bacteriana',ylab='Concentración (ppm)')
wdata = data.frame(
Cepa = factor(rep(c("Pseudomonas sp.", "Serratia sp."), each=200)),
Deg = c(rnorm(200, 52), rnorm(200, 58)))
wdata = data.frame(
Cepa = factor(rep(c("Pseudomonas sp.", "Serratia sp."), each=200)),
Deg = c(rnorm(200, 52), rnorm(200, 58)))
library(ggpubr)
ggboxplot(wdata, x='Cepa',y='Deg', xlab='Cepa bacteriana',ylab='Concentración (ppm)')
wdata = data.frame(
Cepa = factor(rep(c("Pseudomonas sp.", "Serratia sp."), each=200)),
Deg = c(rnorm(200, 58), rnorm(200, 58)))
library(ggpubr)
ggboxplot(wdata, x='Cepa',y='Deg', xlab='Cepa bacteriana',ylab='Concentración (ppm)')
wdata = data.frame(
Cepa = factor(rep(c("Pseudomonas sp.", "Serratia sp."), each=200)),
Deg = c(rnorm(200, 58), rnorm(200, 38)))
library(ggpubr)
ggboxplot(wdata, x='Cepa',y='Deg', xlab='Cepa bacteriana',ylab='Concentración (ppm)')
install_github("slidifyLibraries", "ramnathv")
library("devtools", lib.loc="~/R/win-library/3.3")
install_github("slidifyLibraries", "ramnathv")
install.packages(c("BH", "blogdown", "ggpubr", "lsmeans", "Rcmdr", "RcmdrMisc", "rsconnect", "scales", "shiny", "tibble"))
?getOption
getOption(“rstudio.markdownToHTML”)
getOption('rstudio.markdownToHTML')
library("rmarkdown", lib.loc="~/R/win-library/3.4")
install.packages("units")
library(rJava)
install.packages("rJava")
library("rJava", lib.loc="~/R/win-library/3.4")
sessionInfo()
install.packages("pandoc")
install.packages(c("BH", "blogdown", "ggpubr", "lsmeans", "Rcmdr", "RcmdrMisc", "rsconnect", "scales", "shiny", "tibble"))
rmarkdown::shiny_prerendered_clean('cc.Rmd')
library("knitr", lib.loc="~/R/win-library/3.3")
remove.packages("knitr", lib="~/R/win-library/3.3")
install.packages("knitr")
library("blogdown", lib.loc="~/R/win-library/3.4")
setwd("C:/Users/W/Google Drive/blog/Hugo")
serve_site()
install.packages("tidyselect")
install.packages("ggsci")
install.packages("ggedit")
install.packages("hflights")
install.packages("hflights")
library("blogdown", lib.loc="~/R/win-library/3.4")
serve_site()
serve_site()
# Chunk 1
library(ggplot2)
# Chunk 1
library(ggplot2)
qplot(conc, uptake, data = CO2)
serve_site()
CO2
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") + facets=Type)
?qplot
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") + facets='Type')
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") + facets=~Type)
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") + facets= ~Type)
transform(CO2, fct = CO2$Type)
str(CO2)
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") + facets==Type)
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") , facets=Type)
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") , facets=CO2$Type)
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") , facets= CO2$Type)
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") , facets= ~CO2$Type)
qplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant,
geom = c("point", "line") , facets= ~Type)
serve_site()
