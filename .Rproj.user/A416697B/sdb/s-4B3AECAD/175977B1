{
    "collab_server" : "",
    "contents" : "---\ntitle: Visualización gráfica con _ggplot2_\nauthor: 'Carlos Neftaly '\ndate: '2017-08-21'\nslug: boxplot-en-ggplot2\ndraft: yes\ncategories:\n  - R\n  - Visualización\ntags:\n  - ggplot2\n  - boxplot\n  - gráficos\n---\n\n[ggplot2](http://ggplot2.org/) es uno de los paquetes de R más flexible y poderosos para producir gráficos de alta calidad. Éste sistema de visualización, implementado por [Hadley Wickham](http://hadley.nz/) e inspirado en e libro de [_the grammar of graphics_](http://www.springer.com/us/book/9780387245447), se basa en dividir un gráfico en tres partes fundamentales: \n\n\n\n\n\nThe concept behind ggplot2 divides plot into three different fundamental parts: Plot = data + Aesthetics + Geometry.\n\nThe principal components of every plot can be defined as follow:\n\n\nCada gráfico hecho en `ggplot2` puede estar definido de la siguente manera: \n\n+ `data` : conjunto de datos (**data frame**)\n+ `aesthetics`: comando usado para indicar las variables `x` & `y`. Igualmente, elementos <q> estéticos</q> como color, formas de puntos, grosores, tipos de líneas entre otros puede ser personalizados. \n+ `geometry` o `geom`: Define el tipo de gráfica. (histograma, barras, cajas y bigotes, líneas, ....).\n\nY puede ser producidos mediantes dos funciones principales `qplot()` y `ggplot()`. \n\n\n\nhttp://www.aridhia.com/technical-tutorials/the-fundamentals-of-ggplot-explained/\n\n### `qplot`\n\nEsta función, cuyo nombre  viene de la abreviación para <q>__quick plot__</q>, permite producir gráficos simples de la misma forma que el paquete _base_. De forma genérica la función acepta los siguientes argumentos: \n\n`qplot(x=, y=, data=)`\n\nVeamos varios ejemplos usando el conjunto de datos `CO2`, el cual viene precargados en `R`. \n```{r, message=FALSE, warning=FALSE, include=FALSE}\nlibrary(ggplot2)\n```\n\n\n```{r}\ndata(CO2)\nnames(CO2)\n```\nGrafiquemos la toma de $CO_2$ (`uptake`, variable numérica) en función de la concentración (conc, variable numérica).\n```{r}\nqplot(conc, uptake, data = CO2)\n```\n\nUsando esta función podríamos indicar a qué tratamiento (`Treatment`, factor) y tipo de planta (`Plant`, factor) pertenece cada una de las observaciones presentadas. Para estos los argumentos `colour` y `shape`resultan útiles: \n\n```{r}\nqplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant)\n\n```\n\nNótese la diferencia en la forma de cada punto y el color, los cuales corresponden a el tratamiento y el tipo de planta, respectivamente. \n\nUsando el argumento `geom`podremos selecionar el tipo de gráfico deseado. En este caso usaremos puntos conectados por líneas: \n \n\n```{r}\nqplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant, \n    geom = c(\"point\", \"line\"))\n\n```\n\nOtro argumento interesante es el denominado `facets`. Este permite dividir el gráfico según los niveles de un factor del conjunto de datos. Miremos para nuestro ejemplo como generar un pánel con dos columnasdeterminado por el factor `Type`: \n\n```{r}\nqplot(conc, uptake, data = CO2, shape = Treatment, colour = Plant, \n    geom = c(\"point\", \"line\") , facets= ~Type)\n\n```\n\n\n\n### ggplot \n\nEsta función, la cual es más flexible y completa que `qplot`, permite construir gráficos capa por capa, es decir, personalizar  a gusto, todos los elementos del gráfico como ejes, leyendas, líneas, fondos, etc. Su nombre, `gg` se deriva _The Grammar of the Graphics_, el libro que originó el desarrollo del paquete. \n\n\n#### Personalizando capa a capa...\n\n##### Agregnado elementos geométricos o tipo de gráfico\n\nUn elemento geométrico es usado para definir el estilo del gráfico. Estos incluyen: \n\n\n + `geom_point()` permite obtener un gráfico de puntos \n + `geom_line()` permite obtener un gráfico de líneas \n + `geom_bar()` permite obtener un gráfico de barras \n + `geom_boxplot()` permite obtener un gráfico de  cajas y bigotes o boxplot \n\n\n\n\n```{r}\nggplot(CO2, aes(conc, uptake)) + geom_point()\n```\n\n```{r facets}\nggplot(CO2, aes(conc, uptake, colour = Plant, shape = Treatment)) + geom_point() + \n    geom_line() + facet_grid(~Type)\n```\n\n",
    "created" : 1504730077114.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2528574168",
    "id" : "175977B1",
    "lastKnownWriteTime" : 1504732505,
    "last_content_update" : 1504732505158,
    "path" : "C:/Users/W/Google Drive/blog/Hugo/content/post/2017-08-26-boxplot-en-ggplot2.Rmd",
    "project_path" : "Hugo/content/post/2017-08-26-boxplot-en-ggplot2.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}